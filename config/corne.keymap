/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

&mt {
    flavor = "balanced";
};

/ {
    macros {
        ZMK_MACRO(colon,

        wait-ms = <30>;
        tap-ms = <40>;
        bindings =
            <&macro_press>,
            <&kp LALT>,
            <&macro_tap>,
            <&kp KP_N5 &kp KP_N8>,
            <&macro_release>,
            <&kp LALT>;

        )
    };

    combos {
        /*                     KEY POSITIONS
            ╭────────────────────────╮ ╭────────────────────────╮
            │  0   1   2   3   4   5 │ │  6   7   8   9  10  11 │ 
            │ 12  13  14  15  16  17 │ │ 18  19  20  21  22  23 │
            │ 24  25  26  27  28  29 │ │ 30  31  32  33  34  35 │ 
            ╰───────────╮ 36  37  38 │ │ 39  40  41 ╭───────────╯
                        ╰────────────╯ ╰────────────╯               */

        compatible = "zmk,combos";

        combo_fghj_capslock {
            timeout-ms = <50>;
            key-positions = <16 17 18 19>;
            bindings = <&kp CAPSLOCK>;
        };

        combo_df_esc {
            bindings = <&gresc>;
            key-positions = <15 16>;
            timeout-ms = <50>;
        };

        combo_jk_esc {
            bindings = <&gresc>;
            key-positions = <19 20>;
            timeout-ms = <50>;
        };

        combo_yu_play_pause {
            bindings = <&td_ply>;
            key-positions = <6 7>;
        };

        combo_hj_enter {
            bindings = <&kp RETURN>;
            key-positions = <18 19>;
        };

        combo_fg_tab {
            bindings = <&kp TAB>;
            key-positions = <16 17>;
        };

        combo_ui_volume_down {
            bindings = <&kp C_VOLUME_DOWN>;
            key-positions = <7 8>;
        };

        combo_io_volume_up {
            bindings = <&kp C_VOL_UP>;
            key-positions = <8 9>;
        };

        combo_op_ctx-menu {
            bindings = <&none>;
            key-positions = <10 9>;
        };

        combo_qw_brightness_down {
            bindings = <&kp F1>;
            key-positions = <1 2>;
        };

        combo_we_brightness_up {
            bindings = <&kp F2>;
            key-positions = <2 3>;
        };

        combo_b-t2_raycast {
            bindings = <&kp LG(SPACE)>;
            key-positions = <29 37>;
        };

        combo_b-b3_raycast-apps {
            bindings = <&kp LG(LC(N))>;
            key-positions = <29 38>;
        };

        combo_n-t1_hr-app {
            bindings = <&kp LG(LS(J))>;
            key-positions = <39 30>;
        };

        combo_n-t2_hr-app {
            bindings = <&kp LC(LG(SPACE))>;
            key-positions = <30 40>;
        };

        combo_jm_asterisk {
            bindings = <&kp ASTERISK>;
            key-positions = <19 31>;
        };

        combo_k-comma_hash {
            bindings = <&kp HASH>;
            key-positions = <20 32>;
        };

        combo_hm_percent {
            bindings = <&kp PERCENT>;
            key-positions = <18 30>;
        };

        combo_uj_brackets {
            bindings = <&td_bks_left>;
            key-positions = <7 19>;
        };

        combo_ik_brackets {
            bindings = <&td_bks_right>;
            key-positions = <8 20>;
        };

        combo_yh_quotes {
            bindings = <&kp APOSTROPHE>;
            key-positions = <6 18>;
        };

        combo_t123-l_adj {
            bindings = <&to 4>;
            key-positions = <36 37 38>;
        };

        combo_t123-r_adj {
            bindings = <&to 4>;
            key-positions = <39 40 41>;
        };

        combo_nm_delete {
            bindings = <&kp BACKSPACE>;
            key-positions = <30 31>;
        };

        combo_vb_backspace {
            bindings = <&kp DELETE>;
            key-positions = <28 29>;
        };
    };

    behaviors {
        td_ply: td_ply {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_PLY";
            #binding-cells = <0>;
            tapping-term-ms = <250>;
            bindings = <&kp F8>, <&kp F9>, <&kp F7>;
        };

        td_slshs: td_slashes {
            compatible = "zmk,behavior-tap-dance";
            label = "td_slashes";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp FSLH>, <&kp BACKSLASH>;
        };

        gresc: grave_escape {
            compatible = "zmk,behavior-mod-morph";
            label = "GRAVE_ESCAPE";
            #binding-cells = <0>;
            bindings = <&kp ESC>, <&kp GRAVE>;

            mods = <(MOD_LGUI|MOD_LSFT|MOD_RGUI|MOD_RSFT)>;
            keep-mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        hrm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <200>;
            quick-tap-ms = <125>;
            global-quick-tap;
            bindings = <&kp>, <&kp>;
        };

        td_bks_left: td_brackets_left {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_BRACKETS_LEFT";
            #binding-cells = <0>;
            tapping-term-ms = <260>;
            bindings =
                <&kp LEFT_PARENTHESIS>,
                <&kp LS(LEFT_BRACKET)>,
                <&kp LEFT_BRACKET>;
        };

        td_bks_right: td_brackets_2 {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_BRACKETS_2";
            #binding-cells = <0>;
            tapping-term-ms = <260>;
            bindings =
                <&kp RIGHT_PARENTHESIS>,
                <&kp LS(RIGHT_BRACKET)>,
                <&kp RIGHT_BRACKET>;
        };

        td_colon: td_colon {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_COLON";
            #binding-cells = <0>;
            tapping-term-ms = <260>;
            bindings = <&kp COLON>, <&kp SEMICOLON>;
        };

        td_cm_dt_dsh: td_comma_dot_dash {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_COMMA_DOT_DASH";
            #binding-cells = <0>;
            tapping-term-ms = <230>;
            bindings = <&kp COMMA>, <&kp PERIOD>, <&kp MINUS>;
        };

        td_layer: td_layer {
            compatible = "zmk,behavior-hold-tap";
            label = "TD_LAYER";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <240>;
            global-quick-tap;
            bindings = <&to>, <&td_cm_dt_dsh>;
        };

        sk_layer: sk_layer {
            compatible = "zmk,behavior-hold-tap";
            label = "SK_LAYER";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <240>;
            global-quick-tap;
            bindings = <&lt>, <&sk>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        // ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄

        default_layer {
            bindings = <
&none  &kp Q  &kp W            &kp E                &kp R            &kp T                &kp Y              &kp U            &kp I                    &kp O              &kp P          &none
&none  &kp A  &kp S            &kp D                &kp F            &lt 3 G              &lt 3 H            &kp J            &kp K                    &kp L              &kp SEMICOLON  &none
&none  &kp Z  &hrm LEFT_ALT X  &hrm LEFT_CONTROL C  &hrm LEFT_GUI V  &hrm LEFT_SHIFT B    &hrm LEFT_SHIFT N  &hrm LEFT_GUI M  &hrm LEFT_CONTROL COMMA  &hrm LEFT_ALT DOT  &td_slshs      &none
                               &sk LEFT_CONTROL     &kp LEFT_SHIFT   &lt 1 SPACE          &lt 1 ENTER        &lt 2 &td_cm_dt_dsh                &kp COLON      
//                               &sk LEFT_CONTROL     &kp LEFT_SHIFT   &lt 1 SPACE          &lt 1 ENTER        &lt 2 COLON      &td_cm_dt_dsh
            >;
        };

        // ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄

        numbers_layer {
            bindings = <
&none      &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4  &kp NUMBER_5    &kp NUMBER_6  &kp NUMBER_7  &kp N8     &kp N9    &kp NUMBER_0  &none
&kp EQUAL  &kp EXCL      &kp AT        &kp HASH      &kp DLLR      &kp PRCNT       &kp CARET     &kp AMPS      &kp STAR   &kp LPAR  &kp RPAR      &kp MINUS
&none      &kp F1        &kp F2        &kp F3        &kp F5        &kp F7          &kp F8        &kp F9        &kp F10    &kp F11   &kp F12       &none
                                       &trans        &trans        &trans          &trans        &kp EQUAL     &kp MINUS
            >;
        };

        // ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄

        vim_layer {
            bindings = <
&none  &none  &none  &none   &none   &none     &kp HOME      &kp PG_DN      &kp PG_UP      &kp END        &none  &none
&none  &none  &none  &none   &none   &none     &kp LEFT      &kp DOWN       &kp UP         &kp RIGHT      &none  &none
&none  &none  &none  &none   &none   &none     &kp LC(LEFT)  &kp LC(PG_DN)  &kp LC(PG_UP)  &kp LC(RIGHT)  &none  &none
                     &trans  &trans  &trans    &trans        &trans         &trans
            >;
        };

        // ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄

        hotkeys_layer {
            bindings = <
&trans  &kp LG(N1)  &kp LG(N2)  &kp LG(N3)  &kp LG(N4)  &kp LG(N5)    &kp LG(N6)  &kp LG(N7)     &kp LG(N8)     &kp LG(N9)  &kp LG(N0)  &trans
&trans  &kp LG(A)   &kp LG(X)   &kp LG(C)   &kp LG(V)   &none         &trans      &kp LG(GRAVE)  &none          &none       &none       &trans
&trans  &none       &none       &none       &none       &none         &trans      &trans         &trans         &trans      &trans      &trans
                                &none       &trans      &trans        &trans      &trans         &kp LG(GRAVE)
            >;
        };

        // ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄

        adjust_layer {
            bindings = <
&none  &none         &none         &none         &sys_reset    &none           &none   &none       &none       &none  &none  &none
&none  &bt BT_SEL 4  &bt BT_SEL 3  &bt BT_SEL 2  &bt BT_SEL 1  &bt BT_SEL 0    &none   &bt BT_NXT  &bt BT_PRV  &none  &none  &none
&none  &none         &none         &bt BT_CLR    &none         &bootloader     &none   &none       &none       &none  &none  &none
                                   &trans        &none         &trans          &trans  &none       &trans
            >;
        };
    };
};
